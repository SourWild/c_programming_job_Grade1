/* 2151928 唐芊竹 信12 */
#include <iostream>
using namespace std;

/* 可根据需要添加相应的内容 */

/***************************************************************************
  函数名称：
  功    能：输出大写的0~9
  输入参数：
  返 回 值：
  说    明：除本函数外，不允许任何函数中输出“零”-“玖”!!!!!!
***************************************************************************/
void daxie(int num, int flag_of_zero)
{
    /* 不允许对本函数做任何修改 */
    switch (num) {
        case 0:
            if (flag_of_zero)	//此标记什么意思请自行思考
                cout << "零";
            break;
        case 1:
            cout << "壹";
            break;
        case 2:
            cout << "贰";
            break;
        case 3:
            cout << "叁";
            break;
        case 4:
            cout << "肆";
            break;
        case 5:
            cout << "伍";
            break;
        case 6:
            cout << "陆";
            break;
        case 7:
            cout << "柒";
            break;
        case 8:
            cout << "捌";
            break;
        case 9:
            cout << "玖";
            break;
        default:
            cout << "error";
            break;
    }
}

/* 可根据需要自定义其它函数(也可以不定义) */

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int main()
{
    /* double x, y, z, w, o, p;
     int q, r, s;
     cin >> z;
     x = z / 10;
     y = x - (int)x;       //0.912//0.200
     w = y * 10;           //9.12//2.00
     o = w - (int)w;
     p = o * 100;
     p += 0.5;
     q = (int)x;
     r = (int)w;
     s = (int)p;
     int a, b, c, d, e, f, g, h, i, j, k, l;
     a = q / 100000000;
     b = q / 10000000 % 10;
     c = q / 1000000 % 10;
     d = q / 100000 % 10;
     e = q / 10000 % 10;
     f = q / 1000 % 10;
     g = q / 100 % 10;
     h = q / 10 % 10;
     i = q % 10;
     j = r;
     k = s / 10 % 10;
     l = s % 10;
     */
    double z, x, y, w;
    int a, b, c, d, e, f, g, h, i, j, k, l, u;
    cout << "请输入[0-100亿)之间的数字:\n";
    cin >> z;
    z += 0.0001;
    x = ((z / 10) - (int)(z / 10)) * 10;
    y = x - (int)x;
    w = y * 100;
    w += 0.5;
    u = (int)w;
    cout << "大写结果是:\n";
    a = (int)(z / 10) / 100000000;//十亿
    b = ((int)(z / 10) / 10000000) % 10;
    c = (((int)(z / 10) / 1000000) % 100) % 10;
    d = ((((int)(z / 10) / 100000) % 1000) % 100) % 10;
    e = (((((int)(z / 10) / 10000) % 10000) % 1000) % 100) % 10;
    f = ((((((int)(z / 10) / 1000) % 100000) % 10000) % 1000) % 100) % 10;
    g = (((((((int)(z / 10) / 100) % 1000000) % 100000) % 10000) % 1000) % 100) % 10;
    h = ((((((((int)(z / 10) / 10) % 10000000) % 1000000) % 100000) % 10000) % 1000) % 100) % 10;
    i = (((((((((int)(z / 10) / 1) % 100000000) % 10000000) % 1000000) % 100000) % 10000) % 1000) % 100) % 10;//十
    j = (int)((z / 10 - (int)(z / 10)) * 10);//圆
    k = u / 10 % 10;//角
    l = u % 10;//分

    if (a > 0) {
        daxie(a, 0);
        cout << "拾";
    }
    if (b > 0) {
        daxie(b, 0);
        cout << "亿";
    }
    else {
        if (a == 0) {
            cout;
        }
        else {
            cout << "亿";
        }
    }
    if (c > 0) {
        daxie(c, 0);
        cout << "仟";
    }
    else {          //千万位为0
        if ((a == 0) && (b == 0)) {//亿位为0
            daxie(c, 0);
        }
        else {             //亿位不为0
            if ((d > 0) || (e > 0) || (f > 0)) {     //bw,sw,w不全为0
                daxie(c, 1);
            }
            if ((d == 0) && (e == 0) && (f == 0)) {        //bw,sw,w全为0
                daxie(c, 0);
            }
        }
    }
    if (d > 0) {
        daxie(d, 0);
        cout << "佰";
    }
    else {
        if ((a == 0) && (b == 0)) {     //亿位为0
            if ((c > 0) && (e > 0) && (f > 0)) {
                daxie(d, 1);
            }
            if ((c > 0) && (e > 0) && (f == 0)) {
                daxie(d, 1);
            }
            if ((c > 0) && (e == 0) && (f > 0)) {
                daxie(d, 1);
            }
            if ((c > 0) && (e == 0) && (f == 0)) {
                daxie(d, 0);
            }
            if ((c == 0) && (e > 0) && (f > 0)) {
                daxie(d, 0);
            }
            if ((c == 0) && (e > 0) && (f == 0)) {
                daxie(d, 0);
            }
            if ((c == 0) && (e == 0) && (f > 0)) {
                daxie(d, 0);
            }
            if ((c == 0) && (e == 0) && (f == 0)) {
                daxie(d, 0);
            }
        }
        else {             //*亿位不为0
            if ((c > 0) && (e > 0) && (f > 0)) {
                daxie(d, 1);
            }
            if ((c > 0) && (e > 0) && (f == 0)) {
                daxie(d, 1);
            }
            if ((c > 0) && (e == 0) && (f > 0)) {
                daxie(d, 1);
            }
            if ((c > 0) && (e == 0) && (f == 0)) {
                daxie(d, 0);
            }
            if ((c == 0) && (e > 0) && (f > 0)) {
                daxie(d, 0);
            }
            if ((c == 0) && (e > 0) && (f == 0)) {
                daxie(d, 0);
            }
            if ((c == 0) && (e == 0) && (f > 0)) {
                daxie(d, 0);
            }
            if ((c == 0) && (e == 0) && (f == 0)) {
                daxie(d, 0);
            }
        }
    }
    if (e > 0) {
        daxie(e, 0);
        cout << "拾";
    }
    else {
        if ((a == 0) && (b == 0)) {   //亿位为0
            if ((c > 0) && (d > 0) && (f > 0)) {
                daxie(e, 1);
            }
            if ((c > 0) && (d > 0) && (f == 0)) {
                daxie(e, 0);
            }
            if ((c > 0) && (d == 0) && (f > 0)) {
                daxie(e, 0);
            }
            if ((c > 0) && (d == 0) && (f == 0)) {
                daxie(e, 0);
            }
            if ((c == 0) && (d > 0) && (f > 0)) {
                daxie(e, 1);
            }
            if ((c == 0) && (d > 0) && (f == 0)) {
                daxie(e, 0);
            }
            if ((c == 0) && (d == 0) && (f > 0)) {
                daxie(e, 0);
            }
        }
        else {                      //亿位不为0
            if ((c > 0) && (d > 0) && (f > 0)) {
                daxie(e, 1);
            }
            if ((c > 0) && (d > 0) && (f == 0)) {
                daxie(e, 0);
            }
            if ((c > 0) && (d == 0) && (f > 0)) {
                daxie(e, 0);
            }
            if ((c > 0) && (d == 0) && (f == 0)) {
                daxie(e, 0);
            }
            if ((c == 0) && (d > 0) && (f > 0)) {
                daxie(e, 1);
            }
            if ((c == 0) && (d > 0) && (f == 0)) {
                daxie(e, 0);
            }
            if ((c == 0) && (d == 0) && (f > 0)) {
                daxie(e, 0);
            }
            if ((c == 0) && (d == 0) && (f == 0)) {
                daxie(e, 0);
            }
        }
    }
    if (f > 0) {
        daxie(f, 0);
        cout << "万";
    }
    else {
        if ((a == 0) && (b == 0)) {   //亿位为0
            if ((c > 0) && (d > 0) && (e > 0)) {
                cout << "万";
            }
            if ((c > 0) && (d > 0) && (e == 0)) {
                cout << "万";
            }
            if ((c > 0) && (d == 0) && (e > 0)) {   //00 *0
                cout << "万";
            }
            if ((c > 0) && (d == 0) && (e == 0)) {   //00 *0
                cout << "万";
            }
            if ((c == 0) && (d > 0) && (e > 0)) {   //00 0*
                cout << "万";
            }
            if ((c == 0) && (d > 0) && (e == 0)) {   //00 0*
                cout << "万";
            }
            if ((c == 0) && (d == 0) && (e > 0)) {
                cout << "万";
            }
            if ((c == 0) && (d == 0) && (e == 0)) {
                cout;
            }
        }
        else {                      //亿位不为0
            if ((c > 0) && (d > 0) && (e > 0)) {
                cout << "万";
            }
            if ((c > 0) && (d > 0) && (e == 0)) {
                cout << "万";
            }
            if ((c > 0) && (d == 0) && (e > 0)) {
                cout << "万";
            }
            if ((c > 0) && (d == 0) && (e == 0)) {
                cout << "万";
            }
            if ((c == 0) && (d > 0) && (e > 0)) {
                cout << "万";
            }
            if ((c == 0) && (d > 0) && (e == 0)) {
                cout << "万";
            }
            if ((c == 0) && (d == 0) && (e > 0)) {
                cout << "万";
            }
            if ((c == 0) && (d == 0) && (e == 0)) {
                cout;
            }
        }
    }
    if (g > 0) {     //千位>0
        daxie(g, 0);
        cout << "仟";
    }
    else {
        if ((a == 0) && (b == 0) && (c == 0) && (d == 0) && (e == 0) && (f == 0)) {     //前面全为0
            if ((h == 0) && (i == 0) && (j == 0)) {
                if ((k == 0) && (l == 0)) {
                    daxie(g, 1);
                }
                if ((k > 0 || l > 0)) {
                    cout;
                }
            }
            else {
                cout;
            }
        }
        else {                                                      //前面有数
            if ((h == 0) && (i == 0) && (j == 0)) {
                cout;
            }
            else {                                             //前面有数，hij不全为0
                daxie(g, 1);
            }
        }
    }
    if (h > 0) {
        daxie(h, 0);
        cout << "佰";
    }
    else {
        if ((a == 0) && (b == 0) && (c == 0) && (d == 0) && (e == 0) && (f == 0)) {     //前面全为0
            if ((g > 0) && (i > 0) && (j > 0)) {
                daxie(h, 1);
            }
            if ((g > 0) && (i > 0) && (j == 0)) {
                daxie(h, 1);
            }
            if ((g > 0) && (i == 0) && (j > 0)) {
                daxie(h, 1);
            }
            if ((g > 0) && (i == 0) && (j == 0)) {
                cout;
            }
            if ((g == 0) && (i > 0) && (j > 0)) {
                cout;
            }
            if ((g == 0) && (i > 0) && (j == 0)) {
                cout;
            }
            if ((g == 0) && (i == 0) && (j > 0)) {
                cout;
            }
            if ((g == 0) && (i == 0) && (j == 0)) {
                cout;
            }
        }
        else {             //*前面不全为0
            if ((g > 0) && (i > 0) && (j > 0)) {
                daxie(h, 1);
            }
            if ((g > 0) && (i > 0) && (j == 0)) {
                daxie(h, 1);
            }
            if ((g > 0) && (i == 0) && (j > 0)) {
                daxie(h, 1);
            }
            if ((g > 0) && (i == 0) && (j == 0)) {
                cout;
            }
            if ((g == 0) && (i > 0) && (j > 0)) {
                cout;
            }
            if ((g == 0) && (i > 0) && (j == 0)) {
                cout;
            }
            if ((g == 0) && (i == 0) && (j > 0)) {
                cout;
            }
            if ((g == 0) && (i == 0) && (j == 0)) {
                cout;
            }
        }
    }
    if (i > 0) {
        daxie(i, 0);
        cout << "拾";
    }
    else {
        if ((a == 0) && (b == 0) && (c == 0) && (d == 0) && (e == 0) && (f == 0)) {     //前面全为0
            if ((g > 0) && (h > 0) && (j > 0)) {
                daxie(i, 1);
            }
            if ((g > 0) && (h > 0) && (j == 0)) {
                cout;
            }
            if ((g > 0) && (h == 0) && (j > 0)) {
                cout;
            }
            if ((g > 0) && (h == 0) && (j == 0)) {
                cout;
            }
            if ((g == 0) && (h > 0) && (j > 0)) {
                daxie(i, 1);
            }
            if ((g == 0) && (h > 0) && (j == 0)) {
                cout;
            }
            if ((g == 0) && (h == 0) && (j > 0)) {
                cout;
            }
            if ((g == 0) && (h == 0) && (j == 0)) {
                cout;
            }
        }
        else {             //*前面不全为0
            if ((g > 0) && (h > 0) && (j > 0)) {
                daxie(i, 1);
            }
            if ((g > 0) && (h > 0) && (j == 0)) {
                cout;
            }
            if ((g > 0) && (h == 0) && (j > 0)) {
                cout;
            }
            if ((g > 0) && (h == 0) && (j == 0)) {
                cout;
            }
            if ((g == 0) && (h > 0) && (j > 0)) {
                daxie(i, 1);
            }
            if ((g == 0) && (h > 0) && (j == 0)) {
                cout;
            }
            if ((g == 0) && (h == 0) && (j > 0)) {
                cout;
            }
            if ((g == 0) && (h == 0) && (j == 0)) {
                cout;
            }
        }
    }
    if (j > 0) {
        daxie(j, 0);
        cout << "圆";
    }
    else {
        if ((a == 0) && (b == 0) && (c == 0) && (d == 0) && (e == 0) && (f == 0)) {     //前面全为0
            if ((g > 0) && (h > 0) && (i > 0)) {
                cout << "圆";
            }
            if ((g > 0) && (h > 0) && (i == 0)) {
                cout << "圆";
            }
            if ((g > 0) && (h == 0) && (i > 0)) {
                cout << "圆";
            }
            if ((g > 0) && (h == 0) && (i == 0)) {
                cout << "圆";
            }
            if ((g == 0) && (h > 0) && (i > 0)) {
                cout << "圆";
            }
            if ((g == 0) && (h > 0) && (i == 0)) {
                cout << "圆";
            }
            if ((g == 0) && (h == 0) && (i > 0)) {
                cout << "圆";
            }
            if ((g == 0) && (h == 0) && (i == 0) && (k > 0 || l > 0)) {
                cout;
            }
            if ((g == 0) && (h == 0) && (i == 0) && (k == 0) && (l == 0)) {
                cout << "圆整";
            }
        }
        else {             //*前面不全为0
            if ((g > 0) && (h > 0) && (i > 0)) {
                cout << "圆";
            }
            if ((g > 0) && (h > 0) && (i == 0)) {
                cout << "圆";
            }
            if ((g > 0) && (h == 0) && (i > 0)) {
                cout << "圆";
            }
            if ((g > 0) && (h == 0) && (i == 0)) {
                cout << "圆";
            }
            if ((g == 0) && (h > 0) && (i > 0)) {
                cout << "圆";
            }
            if ((g == 0) && (h > 0) && (i == 0)) {
                cout << "圆";
            }
            if ((g == 0) && (h == 0) && (i > 0)) {
                cout << "圆";
            }
            if ((g == 0) && (h == 0) && (i == 0)) {
                cout << "圆";
            }
        }
    }
    if ((a == 0) && (b == 0) && (c == 0) && (d == 0) && (e == 0) && (f == 0) && (g == 0) && (h == 0) && (i == 0) && (j == 0)) {     //前面全为0
        if (l == 0) {       //分位为0
            if (k > 0) {
                daxie(k, 0);
                cout << "角整";
            }
            else {
                cout;
            }
        }
        else {                      //整数为0，分位不为0
            if (k > 0) {
                daxie(k, 0);
                cout << "角";
            }
            else {
                cout;
            }
        }
    }
    else {     //整数部分>0
        if (l == 0) {                //整数不为0，分位为0
            if (k > 0) {
                daxie(k, 0);
                cout << "角整";
            }
            else {
                cout << "整";
            }
        }
        else {                 //整数不为0，分位不为0
            if (k > 0) {
                daxie(k, 0);
                cout << "角";
            }
            else {
                cout << "零";
            }
        }
    }
    if (l > 0) {
        daxie(l, 0);
        cout << "分";
    }
    else {
        cout;
    }
    cout << endl;

    /* 按需完成 */
    return 0;
}